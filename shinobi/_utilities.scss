@use 'sass:math';
@use 'variables' as *;
@use 'shorthands' as sh;

$sides: 'all', 'top', 'right', 'bottom', 'left';
$values: (
    'margin': (
        '0': 0,
        '1': $base-margin,
        '2': $base-margin * 2,
        '3': $base-margin * 4,
        '4': $base-margin * 6,
        '5': $base-margin * 8
    ),
    'padding': (
        '0': 0,
        '1': $base-padding,
        '2': $base-padding * 2,
        '3': $base-padding * 4,
        '4': $base-padding * 6,
        '5': $base-padding * 8
    ),
    'opacity': (
        '10': 0.1,
        '20': 0.2,
        '30': 0.3,
        '40': 0.4,
        '50': 0.5,
        '60': 0.6,
        '70': 0.7,
        '80': 0.8,
        '90': 0.9,
        '100': 1
    ),
    'border-radius': (
        'default': $base-border-radius,
        'none': 0,
        'xs': math.div($base-border-radius, 4),
        'sm': math.div($base-border-radius, 2),
        'lg': $base-border-radius * 2,
        'full': 50%
    ),
    'display': (
        'n': none,
        'b': block,
        'f': flex,
        'i': inline,
        'i-b': inline-block
    ),
    'font-size': (
        'sm': $font-size-sm,
        'md': $base-font-size,
        'lg': $font-size-lg,
        'xl': $font-size-xl,
        'xxl': $font-size-xxl
    )
);



// generate utilities map
@each $style, $prop in $values {
    $s: map-get(sh.$shorthands, $style) or $style;

    @if ($style == 'margin' or $style == 'padding') {
        @each $side in $sides { 
            $si: map-get(sh.$shorthands, $side) or '';
    
            @each $key, $value in $prop {
                .#{$s}#{$si}-#{$key} {
                    @if ($side == 'all') {
                        #{$style}: $value;
                    } @else {
                        #{$style}-#{$side}: $value;
                    }
                }
            }
        }
    } @else {
        @each $key, $value in $prop {
            @if ($key == 'default') {
                .#{$s} { #{$style}: $value }
            } @else {
                .#{$s}-#{$key} { #{$style}: $value }
            }
        }
    }
}