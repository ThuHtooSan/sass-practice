@use 'sass:math';
@use 'variables' as *;
@use 'breakpoints' as bp;
@use 'shorthands' as sh;

$grid-columns: 12;
$grid-gaps: (
    '0': 0,
    '1': $base-gap * 1,
    '2': $base-gap * 2,
    '3': $base-gap * 3,
    '4': $base-gap * 4
);

$justify-content-values: flex-start, flex-end, center, space-around, space-between, stretch;
$align-items-values: flex-start, flex-end, center, baseline, center, normal, stretch;

$alignments: (
    'justify-content': $justify-content-values,
    'align-items': $align-items-values
);

// base layout classes
.container-fluid {
    width: 100%;
    margin: 0 auto;
}

.container {
    @extend .container-fluid;
    max-width: 1200px;
    padding: 0 20px;
} 



.row {
    display: flex;
    flex-flow: row wrap;
}

// gap classes
@each $key, $val in $grid-gaps {
    .gap-#{$key} {
        gap: $val;
    }
}

// alignment classes
@each $key, $list in $alignments {
    $short-key: map-get(sh.$shorthands, $key) or $key;

    @each $val in $list {
        $short-val: map-get(sh.$shorthands, $val) or $val;

        .#{$short-key}-#{$short-val} {
            #{$key}: $val;
        }
    }
}

// col classes
@each $key, $val in bp.$breakpoints {
    @media (min-width: $val) {
        @for $i from 1 through $grid-columns {
            .col-#{$key}-#{$i} {
                flex-grow: 0;
                width: math.div(100%, $grid-columns) * $i;
            }
        }
    }
}